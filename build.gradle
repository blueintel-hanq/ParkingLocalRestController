
buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.2.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
        classpath "org.liquibase:liquibase-gradle-plugin:2.0.4"
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.liquibase.gradle" version "2.0.4"
    id 'maven-publish'
}

apply plugin: "org.liquibase.gradle"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

group = 'com.blueparking'
version = '0.0.2'
archivesBaseName = 'RestController'
sourceCompatibility = 8
targetCompatibility = 8

def nexusUrl="http://121.140.92.209:8081"
def nexusUsername='admin'
def nexusPassword='elwlxjffh31!@'

configurations {
    liquibase
}

liquibase {
    activities {
        main {
            changeLogFile "./src/main/resources/db/changelog-master.xml"
            url "jdbc:mariadb://localhost:3306/blueintel_parking?characterEncoding=UTF-8&allowMultiQueries=true"
            username "user_rest"
            password "elwlxjffh31!@"
            driver "org.mariadb.jdbc.Driver"
            referenceUrl "jdbc:mariadb://localhost:3306/blueintel_parking?characterEncoding=UTF-8&allowMultiQueries=true"
            referenceUsername "user_rest"
            referencePassword "elwlxjffh31!@"
            referenceDriver "org.mariadb.jdbc.Driverr"
        }
        runList = 'main'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact bootJar // Publish the output of the sourceJar task
        }
    }
    repositories {
        maven {
            credentials{
                username="${nexusUsername}"
                password="${nexusPassword}"
            }
            url = "${nexusUrl}/repository/parking-local-rest-controller/"
            allowInsecureProtocol = true
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven {
        url "${nexusUrl}/repository/maven-public/"
        credentials{
            username="${nexusUsername}"
            password="${nexusPassword}"
        }
        allowInsecureProtocol = true
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
    }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.liquibase:liquibase-core:4.3.5'
    liquibaseRuntime 'org.liquibase:liquibase-core:4.3.5'
    liquibaseRuntime 'org.mariadb.jdbc:mariadb-java-client'

    // swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.2'

    implementation 'com.blueparking:parking-local-rest-common:0.0.1'
}

test {
    useJUnitPlatform()
}

bootRun {
    systemProperties = System.properties
}

tasks.jar {
    enabled = true
}

tasks.bootJar {
    enabled = true
    archiveBaseName = "RestController"
    archiveVersion = "0.0.1"
}
